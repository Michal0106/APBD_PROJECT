// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Data;

#nullable disable

namespace System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240620082635_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearsOfUpdateSupport")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discriminator")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discriminator")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Company", b =>
                {
                    b.HasBaseType("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Customer");

                    b.Property<string>("Krs")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.IndividualCustomer", b =>
                {
                    b.HasBaseType("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Customer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.ToTable("IndividualCustomers");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Software", b =>
                {
                    b.HasBaseType("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Softwares");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Contract", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Customer", "Customer")
                        .WithMany("Contracts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Discount", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Payment", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Company", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Customer", null)
                        .WithOne()
                        .HasForeignKey("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Company", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.IndividualCustomer", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Customer", null)
                        .WithOne()
                        .HasForeignKey("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.IndividualCustomer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Software", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Software", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Contract", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Customer", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product", b =>
                {
                    b.Navigation("Discounts");
                });
#pragma warning restore 612, 618
        }
    }
}
